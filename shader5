#include <windows.h>
#pragma comment(lib, "winmm.lib")
#define _USE_MATH_DEFINES 1
#include <cmath>
#define M_PI 3.14159265358979323846264338327950288

int red, green, blue;
bool ifcolorblue = false, ifblue = false;
COLORREF Hue(int length) {
	if (red != length) {
		red < length; red++;
		if (ifblue == true) {
			return RGB(red, 0, length);
		}
		else {
			return RGB(red, 0, 0);
		}
	}
	else {
		if (green != length) {
			green < length; green++;
			return RGB(length, green, 0);
		}
		else {
			if (blue != length) {
				blue < length; blue++;
				return RGB(0, length, blue);
			}
			else {
				red = 0; green = 0; blue = 0;
				ifblue = true;
			}
		}
	}
}


int main()
{
	HDC desk = GetDC(0);
	HWND wnd = GetDesktopWindow();
	int w = GetSystemMetrics(0);
	int h = GetSystemMetrics(1);
	double angle = 0;
	while (1)
	{
		desk = GetDC(0);
		HDC hdc = CreateCompatibleDC(desk);
		HBITMAP hbm = CreateCompatibleBitmap(desk, w, h);
		SelectObject(hdc, hbm);
		BitBlt(hdc, 0, 0, w, h, desk, 0, 0, SRCCOPY);
		for (float z = 0; z < w + h; z += 0.99f)
		{
			int a = sin(angle) * 10;
			HBRUSH brush = CreateSolidBrush(Hue(239));
			SelectObject(hdc, brush);
			BitBlt(hdc, z, 0, 1, h, hdc, z, a, PATCOPY);
			angle += M_PI / 80;
			DeleteObject(brush);
			DeleteObject(&z);
			DeleteObject(&a);
		}
		BitBlt(desk, 0, 0, w, h, hdc, 0, 0, SRCCOPY);
		ReleaseDC(wnd, hdc);
		DeleteObject(hbm);
		DeleteObject(hdc);
		DeleteObject(desk);
	}
}
