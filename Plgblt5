#include <windows.h>

int main()
{
    HWND desktop = GetDesktopWindow();
    RECT wRect;
    GetWindowRect(desktop, &wRect);
    POINT wPt[3];
    HDC hdc = GetDC(0);
    int ScrW = GetSystemMetrics(SM_CXSCREEN), ScrH = GetSystemMetrics(SM_CYSCREEN);
    int y = rand() % ScrH, h  = ScrH - rand()%ScrH - (ScrH / 2 - 109);
    int w = wRect.right - wRect.left;
    int r = wRect.bottom - wRect.top;
    int x = GetSystemMetrics(0), p = GetSystemMetrics(1);

    while (1)
    {
    GetWindowRect(GetDesktopWindow(), &wRect);
    wPt[0].x = wRect.left + 21 + 11;
    wPt[0].y = wRect.top + 90 + 30;
    wPt[1].x = wRect.right - 69 - 420;
    wPt[1].y = wRect.top + 71 - 69;
    wPt[2].x = wRect.left + 54 + 34;
    wPt[2].y = wRect.bottom - 75 - 40;
    PlgBlt(hdc, wPt, hdc, wRect.left, wRect.top, wRect.right - wRect.left, wRect.bottom - wRect.top, 0, 0, 0);
    GetWindowRect(GetDesktopWindow(), &wRect);
    wPt[0].x = wRect.left + 21 + 11;
    wPt[0].y = wRect.top + 15 - 30;
    wPt[1].x = wRect.right + 61 - 51;
    wPt[1].y = wRect.top - 31 - 49;
    wPt[2].x = wRect.left - 84 - 83;
    wPt[2].y = wRect.bottom - 75 - 50;
    PlgBlt(hdc, wPt, hdc, wRect.left, wRect.top, wRect.right - wRect.left, wRect.bottom - wRect.top, 0, 0, 0);
    y = rand() % ScrH, h  = ScrH - rand()%ScrH - (ScrH / 2 - 109);
    SelectObject(hdc, CreateSolidBrush(RGB(rand() % 255, rand() % 255, rand() % 255)));
    PatBlt(hdc, 0, y, ScrW, h, PATINVERT);
    StretchBlt(hdc, 50, 50, w - 100, r - 100, hdc , 0, 0, w, r, SRCCOPY);
    BitBlt(hdc, rand() % (x - 0), rand() % (p - 0), rand() % (x - 0), rand() % (p - 0), hdc, rand() % (x - 0), rand() % (p - 0), SRCCOPY);
    PatBlt(hdc, 0, 0, x, y, PATINVERT);
  }
}
